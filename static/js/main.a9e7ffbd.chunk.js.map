{"version":3,"sources":["components/Registration/Registration.js","components/Navigation/Navigation.js","components/LogIn/LogIn.js","components/Create/Create.js","components/Posts/Card.js","components/Comment/Comment.js","components/Comment/CommentCreator.js","components/Edit/Edit.js","components/Navigation/LogOutModal.js","App.js","index.js"],"names":["Registration","this","props","isLoggedIn","className","onClick","history","push","React","Component","withRouter","Navigation","clearLocalStotage","localStorage","clear","window","location","reload","to","type","LogIn","showValidationError","element","message","setState","prevState","errors","clearValidationError","newArray","err","handleChange","e","target","id","username","value","password","submitRegistration","state","registeredUser","users","find","user","isOnline","give","createNewUser","changeLoggedUserStatusToOnline","handleUserInfo","usernameErr","passwordErr","placeholder","onChange","Create","handleGreetingStatusChange","isShowingGreeting","handleTitleValueChange","titleValue","handlePostValueChange","postValue","callback","handleAddPost","time","comments","givePostToApp","postId","Date","toLocaleTimeString","classes","root","noValidate","autoComplete","TextField","title","label","variant","Button","color","withStyles","theme","width","margin","spacing","useStyles","makeStyles","marginTop","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","posts","map","post","index","Card","key","CardHeader","Avatar","aria-label","toUpperCase","subheader","edited","CardContent","Typography","component","CardActions","disableSpacing","IconButton","Comment","item","mainCard","style","green","commentTime","commentValue","red","display","CommentCreator","addComment","handleOnchange","console","log","button","justifyContent","Edit","editPostValue","isPostValueChanging","newPostValue","handleNewPostValue","onPostValueChange","handleDoneIconClick","handleDeleteIconClick","handlePostsFilter","match","params","loginedUser","buttonDisabled","defaultValue","disabled","rand","Math","round","random","getModalStyle","top","left","paper","position","palette","background","border","boxShadow","shadows","padding","useState","modalStyle","open","setOpen","handleClose","Modal","aria-labelledby","aria-describedby","onClose","changeAllUsersStatusToOffline","App","newPosts","setItem","JSON","stringify","changeLoginStatus","isSomebodyLoggedIn","some","filter","getItem","parse","changeRegistrationStatus","path","exact","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9e7ffbd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Registration.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Registration extends React.Component {\r\n    render() {\r\n        if (this.props.isLoggedIn) {\r\n            return (\r\n                <div className=\"registartion\">\r\n                    <div className=\"registartion-box\">\r\n                        <span\r\n                            className=\"log-in-btn\"\r\n                            onClick={() =>\r\n                                this.props.history.push(\"/simple-blog/create\")\r\n                            }\r\n                        >\r\n                            Create post{\" \"}\r\n                        </span>\r\n                        and tell us your story!!!\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"registartion\">\r\n                <div className=\"registartion-box\">\r\n                    <span\r\n                        className=\"log-in-btn\"\r\n                        onClick={() =>\r\n                            this.props.history.push(\"/simple-blog/verify\")\r\n                        }\r\n                    >\r\n                        Log in{\" \"}\r\n                    </span>\r\n                    and tell us your story!!!\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Registration);\r\n","import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navigation extends React.Component {\r\n    clearLocalStotage = () => {\r\n        localStorage.clear();\r\n        window.location.reload();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navigation-container\">\r\n                <div className=\"navigation\">\r\n                    <div className=\"left-nav\">\r\n                        <div>\r\n                            <Link to=\"/simple-blog\">\r\n                                <span className=\"icon\">\r\n                                    <i className=\"fas fa-blog\" />\r\n                                    Blog\r\n                                </span>\r\n                            </Link>\r\n                        </div>\r\n                        <Link to=\"/simple-blog/create\">\r\n                            <div className=\"create-post-btn\">create post</div>\r\n                        </Link>\r\n                    </div>\r\n                    <div onClick={this.clearLocalStotage}> Clear Memory </div>\r\n                    {this.props.isLoggedIn ? (\r\n                        <div\r\n                            className=\"right-nav\"\r\n                            onClick={() =>\r\n                                this.props.history.push(\r\n                                    \"/simple-blog/log-out-modal\"\r\n                                )\r\n                            }\r\n                        >\r\n                            <div type=\"button\">Log out</div>\r\n                        </div>\r\n                    ) : (\r\n                        <div\r\n                            className=\"right-nav\"\r\n                            onClick={() =>\r\n                                this.props.history.push(\"/simple-blog/verify\")\r\n                            }\r\n                        >\r\n                            <div type=\"button\">Log in</div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React from \"react\";\r\nimport \"./LogIn.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass LogIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            isOnline: false,\r\n            errors: [],\r\n            isLoggedIn: false\r\n        };\r\n    }\r\n\r\n    showValidationError = (element, message) => {\r\n        this.setState(prevState => ({\r\n            errors: [...prevState.errors, { element, message }]\r\n        }));\r\n    };\r\n\r\n    clearValidationError = element => {\r\n        this.setState(prevState => {\r\n            let newArray = [];\r\n            for (let err of prevState.errors) {\r\n                if (element !== err.element) {\r\n                    newArray.push(err);\r\n                }\r\n            }\r\n            return { errors: newArray };\r\n        });\r\n    };\r\n\r\n    handleChange = e => {\r\n        if (e.target.id === \"username\") {\r\n            this.setState({ username: e.target.value });\r\n            this.clearValidationError(\"username\");\r\n        } else if (e.target.id === \"password\") {\r\n            this.setState({ password: e.target.value });\r\n            this.clearValidationError(\"password\");\r\n        }\r\n    };\r\n\r\n    submitRegistration = () => {\r\n        const { username, password } = this.state;\r\n        if (username === \"\") {\r\n            this.showValidationError(\"username\", \"Username can't be empty\");\r\n        }\r\n        if (password === \"\") {\r\n            this.showValidationError(\"password\", \"Password can't be empty\");\r\n        }\r\n\r\n        let registeredUser = this.props.users.find(\r\n            user => user.username === username && user.password === password\r\n        );\r\n\r\n        if (registeredUser) {\r\n            this.setState(\r\n                {\r\n                    isLoggedIn: true,\r\n                    isOnline: true\r\n                },\r\n                () => this.give(registeredUser)\r\n            );\r\n        } else if (username && password) {\r\n            this.setState({ isLoggedIn: true, isOnline: true }, () =>\r\n                this.createNewUser()\r\n            );\r\n        }\r\n    };\r\n\r\n    give = registeredUser => {\r\n        this.props.changeLoggedUserStatusToOnline(registeredUser);\r\n        this.props.history.push(\"/simple-blog\");\r\n    };\r\n\r\n    createNewUser = () => {\r\n        this.props.history.push(\"/simple-blog\");\r\n        this.props.handleUserInfo(\r\n            this.state.username,\r\n            this.state.password,\r\n            this.state.isOnline\r\n        );\r\n    };\r\n\r\n    render() {\r\n        let usernameErr = null;\r\n        let passwordErr = null;\r\n\r\n        for (let err of this.state.errors) {\r\n            if (err.element === \"username\") {\r\n                usernameErr = err.message;\r\n            }\r\n            if (err.element === \"password\") {\r\n                passwordErr = err.message;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"login-container\">\r\n                <div className=\"login-title-container\">\r\n                    <h2 className=\"login-title\">Log in</h2>\r\n                </div>\r\n                <div className=\"login\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name *\"\r\n                        id=\"username\"\r\n                        className=\"login-input\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <sub className=\"error\">\r\n                        {\" \"}\r\n                        {usernameErr ? usernameErr : \"\"}{\" \"}\r\n                    </sub>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password *\"\r\n                        id=\"password\"\r\n                        className=\"login-input\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <sub className=\"error\">\r\n                        {\" \"}\r\n                        {passwordErr ? passwordErr : \"\"}{\" \"}\r\n                    </sub>\r\n                    <button\r\n                        className=\"login-btn\"\r\n                        onClick={this.submitRegistration}\r\n                    >\r\n                        log in\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LogIn);\r\n","import React from \"react\";\r\nimport \"./Main.css\";\r\n// import Comment from '../Comment/Comment'\r\nimport { withRouter } from \"react-router-dom\";\r\n// Material ui\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"80%\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: \"100%\"\r\n        }\r\n    }\r\n});\r\n\r\nclass Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowingGreeting: true,\r\n            titleValue: \"\",\r\n            postValue: \"\",\r\n            postId: 0\r\n        };\r\n    }\r\n\r\n    handleGreetingStatusChange = () => {\r\n        this.setState({ isShowingGreeting: false });\r\n    };\r\n\r\n    // ONCHANGE\r\n    handleTitleValueChange = e => {\r\n        this.setState({\r\n            titleValue: e.target.value\r\n        });\r\n    };\r\n\r\n    handlePostValueChange = e => {\r\n        this.setState({\r\n            postValue: e.target.value\r\n        });\r\n    };\r\n    // ONCHANGE END\r\n\r\n    callback = () => {\r\n        this.props.history.push(\"/simple-blog/\");\r\n        this.props.handleAddPost({\r\n            titleValue: this.state.titleValue,\r\n            postValue: this.state.postValue,\r\n            username: this.props.users.find(user => user.isOnline === true)\r\n                .username,\r\n            time: this.time(),\r\n            comments: []\r\n        });\r\n    };\r\n\r\n    givePostToApp = () => {\r\n        this.setState(\r\n            state => ({ postId: state.postId + 1 }),\r\n            () => this.callback()\r\n        );\r\n    };\r\n    time = () => {\r\n        let date = new Date();\r\n        return date.toLocaleTimeString();\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className=\"input-global-container\">\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        className={classes.title}\r\n                        id=\"standard-basic\"\r\n                        label=\"Write a title\"\r\n                        onChange={this.handleTitleValueChange}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"Write a post\"\r\n                        variant=\"outlined\"\r\n                        onChange={this.handlePostValueChange}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.givePostToApp}\r\n                    >\r\n                        <span>\r\n                            <i className=\"fas fa-check fa-2x\"></i>\r\n                        </span>\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// export default withRouter(Create)\r\nexport default withStyles(styles)(withRouter(Create));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./Card.css\";\r\n// components\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: \"80%\",\r\n        margin: \"auto\",\r\n        marginTop: \"5px\"\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        margin: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest\r\n        })\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\"\r\n    },\r\n    avatar: {\r\n        backgroundColor: \"lightskyblue\"\r\n    }\r\n}));\r\n\r\nfunction PostCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return props.posts.map((post, index) => {\r\n        return (\r\n            <Card className={classes.root} key={index}>\r\n                <div className=\"card-container\">\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"recipe\"\r\n                                className={classes.avatar}\r\n                            >\r\n                                {post.username[0].toUpperCase()}\r\n                            </Avatar>\r\n                        }\r\n                        title={`${post.titleValue} writed by ${post.username} `}\r\n                        subheader={\r\n                            post.edited\r\n                                ? `${post.time} edited at ${post.edited}`\r\n                                : post.time\r\n                        }\r\n                    />\r\n                    <CardContent>\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                        >\r\n                            {post.postValue}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton\r\n                            aria-label=\"share\"\r\n                            color=\"primary\"\r\n                            onClick={() =>\r\n                                props.history.push(\r\n                                    `/simple-blog/post/edit:${post.postId}`\r\n                                )\r\n                            }\r\n                        >\r\n                            Edit\r\n                        </IconButton>\r\n                    </CardActions>\r\n                </div>\r\n            </Card>\r\n        );\r\n    });\r\n}\r\n\r\nexport default withRouter(PostCard);\r\n","import React from \"react\";\r\n// Router-dom\r\nimport { withRouter } from \"react-router-dom\";\r\n// Material-ui\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { green, red } from \"@material-ui/core/colors\";\r\nimport { withStyles, Button } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// CSS\r\nimport \"../Edit/Edit.css\";\r\n// Components\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"70%\",\r\n        margin: \"1rem auto\",\r\n        height: 150,\r\n        backgroundColor: \"#f2f2f2\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: \"100%\"\r\n        }\r\n    },\r\n    mainCard: {\r\n        width: \"80%\",\r\n        margin: \"auto\",\r\n        display: \"flex\"\r\n    }\r\n});\r\n\r\nclass Comment extends React.Component {\r\n    render() {\r\n        const { classes, post, item, index } = this.props;\r\n        return (\r\n            <Card className={classes.root} key={index}>\r\n                <div className={classes.mainCard}>\r\n                    <div>\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar\r\n                                    aria-label=\"recipe\"\r\n                                    style={{ backgroundColor: green[300] }}\r\n                                >\r\n                                    {post.username[0].toUpperCase()}\r\n                                </Avatar>\r\n                            }\r\n                            title={`${item.commentTime} writed by ${post.username} `}\r\n                        />\r\n                        <CardContent>\r\n                            {false ? (\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Write a post\"\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={post.postValue}\r\n                                    onChange={this.onPostValueChange}\r\n                                />\r\n                            ) : (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                >\r\n                                    {item.commentValue}\r\n                                </Typography>\r\n                            )}\r\n                        </CardContent>\r\n                    </div>\r\n                    <div>\r\n                        <CardActions disableSpacing>\r\n                            <IconButton\r\n                                aria-label=\"share\"\r\n                                // onClick={this.editPostValue}\r\n                                // disabled={this.state.buttonDisabled}\r\n                            >\r\n                                <EditIcon style={{ color: green[500] }} />\r\n                            </IconButton>\r\n                        </CardActions>\r\n                        <CardActions disableSpacing>\r\n                            <IconButton\r\n                                aria-label=\"share\"\r\n                                // onClick={this.handleDeleteIconClick}\r\n                            >\r\n                                <DeleteForeverIcon\r\n                                    style={{ color: red[500] }}\r\n                                />\r\n                            </IconButton>\r\n                        </CardActions>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(Comment));\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n// Router-dom\r\nimport { withRouter } from \"react-router-dom\";\r\n// Matrial ui\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"80%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        margin: \"1rem auto\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(3),\r\n            width: \"100%\"\r\n        }\r\n    },\r\n    button: {\r\n        width: \"auto\"\r\n    }\r\n});\r\n\r\nclass CommentCreator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: [],\r\n            commentValue: \"\",\r\n            commentTime: this.time\r\n        };\r\n    }\r\n\r\n    // Add Comment to Comments array\r\n    addComment = () => {\r\n        this.setState({\r\n            comments: [\r\n                ...this.state.comments,\r\n                {\r\n                    commentValue: this.state.commentValue,\r\n                    commentTime: this.state.commentTime()\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    // Comment Value onchange\r\n    handleOnchange = e => {\r\n        this.setState({\r\n            commentValue: e.target.value\r\n        });\r\n    };\r\n\r\n    time = () => {\r\n        let date = new Date();\r\n        return date.toLocaleTimeString();\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { comments } = this.state;\r\n        console.log(\"COMMENTS ---\", this.state.comments);\r\n        // console.log('POST WITH COMMENTS ---' , this.state.comments )\r\n        return (\r\n            <section>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        className={classes.title}\r\n                        id=\"standard-basic\"\r\n                        label=\"Write a title\"\r\n                        onChange={this.handleOnchange}\r\n                    />\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.addComment}\r\n                    >\r\n                        Comment\r\n                    </Button>\r\n                </form>\r\n                {comments.map((item, index) => {\r\n                    return (\r\n                        <Comment\r\n                            post={this.props.post}\r\n                            item={item}\r\n                            index={index}\r\n                        />\r\n                    );\r\n                })}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(CommentCreator));\r\n","import React from \"react\";\r\n// Router-dom\r\nimport { withRouter } from \"react-router-dom\";\r\n// Material-ui\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport DoneOutlineIcon from \"@material-ui/icons/DoneOutline\";\r\nimport { green, red } from \"@material-ui/core/colors\";\r\nimport { withStyles, Button } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// CSS\r\nimport \"./Edit.css\";\r\n// Components\r\nimport CommentCreator from \"../Comment/CommentCreator\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"80%\",\r\n        margin: \"auto\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: \"100%\"\r\n        }\r\n    },\r\n    mainCard: {\r\n        width: \"80%\",\r\n        margin: \"auto\"\r\n    }\r\n});\r\n\r\nclass Edit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post: this.props.posts.find(\r\n                post => `:${post.postId}` === this.props.match.params.id\r\n            ),\r\n            isPostValueChanging: false,\r\n            newPostValue: \"\",\r\n            loginedUser: {},\r\n            buttonDisabled: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let loginedUser = this.props.users.find(user => user.isOnline === true);\r\n\r\n        const buttonDisabled =\r\n            loginedUser.username !== this.state.post.username &&\r\n            loginedUser.password !== this.state.post.password;\r\n\r\n        this.setState({\r\n            loginedUser: loginedUser,\r\n            buttonDisabled: buttonDisabled\r\n        });\r\n    }\r\n    //  CHANGES IS-POST VALUE CHANGING\r\n    editPostValue = () => {\r\n        this.setState({\r\n            isPostValueChanging: !this.state.isPostValueChanging\r\n        });\r\n        const { post, newPostValue } = this.state;\r\n        this.props.handleNewPostValue(\r\n            post.postId,\r\n            newPostValue ? newPostValue : post.postValue\r\n        );\r\n    };\r\n\r\n    // On Post Value change\r\n    onPostValueChange = e => {\r\n        this.setState({\r\n            newPostValue: e.target.value\r\n                ? e.target.value\r\n                : this.state.post.postValue\r\n        });\r\n    };\r\n    // ON done icon click\r\n    handleDoneIconClick = () => {\r\n        const { post, newPostValue } = this.state;\r\n        this.setState({\r\n            isPostValueChanging: false\r\n        });\r\n        this.props.handleNewPostValue(\r\n            post.postId,\r\n            newPostValue ? newPostValue : post.postValue\r\n        );\r\n    };\r\n    // ON delete icon click\r\n    handleDeleteIconClick = () => {\r\n        const { post } = this.state;\r\n        this.props.history.push(\"/simple-blog/\");\r\n        this.props.handlePostsFilter(post.postId);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { post, isPostValueChanging, newPostValue } = this.state;\r\n        console.log(\"POSTS --\", this.props.posts);\r\n        console.log(\"post\", this.state.post);\r\n        return (\r\n            <>\r\n                <Card className={classes.root}>\r\n                    <div className={classes.mainCard}>\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar\r\n                                    aria-label=\"recipe\"\r\n                                    style={{ backgroundColor: green[300] }}\r\n                                >\r\n                                    {post.username[0].toUpperCase()}\r\n                                </Avatar>\r\n                            }\r\n                            title={`${post.titleValue} writed by ${post.username} `}\r\n                            subheader={post.time}\r\n                        />\r\n                        <CardContent>\r\n                            {isPostValueChanging ? (\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Write a post\"\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={\r\n                                        newPostValue\r\n                                            ? newPostValue\r\n                                            : post.postValue\r\n                                    }\r\n                                    onChange={this.onPostValueChange}\r\n                                />\r\n                            ) : (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                >\r\n                                    {newPostValue\r\n                                        ? newPostValue\r\n                                        : post.postValue}\r\n                                </Typography>\r\n                            )}\r\n                        </CardContent>\r\n                        <div className=\"edit-btn-container\">\r\n                            <CardActions disableSpacing>\r\n                                <IconButton\r\n                                    aria-label=\"share\"\r\n                                    onClick={this.editPostValue}\r\n                                    disabled={this.state.buttonDisabled}\r\n                                >\r\n                                    <EditIcon style={{ color: green[500] }} />\r\n                                </IconButton>\r\n                            </CardActions>\r\n                            <CardActions disableSpacing>\r\n                                <IconButton\r\n                                    aria-label=\"share\"\r\n                                    onClick={this.handleDeleteIconClick}\r\n                                    disabled={this.state.buttonDisabled}\r\n                                >\r\n                                    <DeleteForeverIcon\r\n                                        style={{ color: red[500] }}\r\n                                    />\r\n                                </IconButton>\r\n                            </CardActions>\r\n                            <CardActions disableSpacing>\r\n                                <IconButton\r\n                                    aria-label=\"share\"\r\n                                    onClick={this.handleDoneIconClick}\r\n                                >\r\n                                    <DoneOutlineIcon color=\"primary\" />\r\n                                </IconButton>\r\n                            </CardActions>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n                <CommentCreator post={post} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(Edit));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        position: \"absolute\",\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"2px solid #000\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    }\r\n}));\r\n\r\nfunction LogOutModal(props) {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        props.changeAllUsersStatusToOffline();\r\n        handleClose();\r\n        props.history.push(\"/simple-blog/verify\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <h2 id=\"simple-modal-title\">Log Out</h2>\r\n                    <p id=\"simple-modal-description\">Are you sure ?</p>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        Log out\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(LogOutModal);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Registration from \"./components/Registration/Registration\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport LogIn from \"./components/LogIn/LogIn\";\nimport Create from \"./components/Create/Create\";\nimport PostCard from \"./components/Posts/Card\";\nimport Edit from \"./components/Edit/Edit\";\n\nimport LogOutModal from \"./components/Navigation/LogOutModal\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isLoggedIn: localStorage.getItem(\"isLoggedIn\") || false,\n            posts: JSON.parse(localStorage.getItem(\"posts\") || \"[]\"),\n            users: JSON.parse(localStorage.getItem(\"users\") || \"[]\"),\n            postId: +localStorage.getItem(\"postId\") || 0\n        };\n    }\n    // Time\n    time = () => {\n        let date = new Date();\n        return date.toLocaleTimeString();\n    };\n\n    handleAddPost = post => {\n        let postWithId = { ...post, postId: this.state.postId + 1 };\n        const newPosts = [postWithId, ...this.state.posts];\n        this.setState({\n            posts: newPosts,\n            postId: this.state.postId + 1\n        });\n        localStorage.setItem(\"postId\", this.state.postId);\n        localStorage.setItem(\"posts\", JSON.stringify(newPosts));\n    };\n\n    changeLoginStatus = () => {\n        const isSomebodyLoggedIn = this.state.users.some(\n            user => user.isOnline === true\n        );\n        console.log(\"isSomebodyLoggedIn\", isSomebodyLoggedIn);\n        this.setState({\n            isLoggedIn: isSomebodyLoggedIn\n        });\n        localStorage.setItem(\"isLoggedIn\", isSomebodyLoggedIn);\n    };\n\n    changeAllUsersStatusToOffline = () => {\n        this.setState(\n            {\n                users: this.state.users.map(user => ({\n                    ...user,\n                    isOnline: false\n                }))\n            },\n            () => this.changeLoginStatus()\n        );\n    };\n\n    changeLoggedUserStatusToOnline = registeredUser => {\n        this.setState({\n            users: this.state.users.map(user => {\n                if (user.username === registeredUser.username) {\n                    return { ...user, isOnline: true };\n                }\n                return user;\n            }),\n            isLoggedIn: true\n        });\n    };\n\n    handleUserInfo = (username, password, isOnline) => {\n        this.setState(\n            state => ({\n                isLoggedIn: true,\n                users: [\n                    ...state.users,\n                    {\n                        username: username,\n                        password: password,\n                        isOnline: isOnline\n                    }\n                ]\n            }),\n            () =>\n                localStorage.setItem(\n                    \"users\",\n                    JSON.stringify(this.state.users),\n                    this.changeLoginStatus()\n                ),\n            localStorage.setItem(\"isLoggedIn\", this.state.isLoggedIn)\n        );\n    };\n\n    // Handle function that adds new value to post with that id\n    handleNewPostValue = (id, newPostValue) => {\n        const newPosts = this.state.posts.map(post => {\n            if (post.postId === id) {\n                console.log(\"yes\");\n                return {\n                    ...post,\n                    postValue: newPostValue,\n                    edited: this.time()\n                };\n            } else {\n                return post;\n            }\n        });\n        localStorage.setItem(\"posts\", JSON.stringify(newPosts));\n        this.setState({\n            posts: newPosts\n        });\n    };\n\n    // Handle function that filteres posts and takes all posts accept deleted\n    handlePostsFilter = id => {\n        this.setState(\n            state => ({\n                posts: state.posts.filter(post => post.postId !== id)\n            }),\n            () =>\n                localStorage.setItem(\"posts\", JSON.stringify(this.state.posts))\n        );\n    };\n\n    render() {\n        const { isLoggedIn, posts, users } = this.state;\n        console.log(\"POSTS---\", posts);\n        console.log(\"App--State == \", this.state);\n        console.log(\"LOCALSTORAGE---\", localStorage);\n        return (\n            <div className=\"app\">\n                <Navigation\n                    isLoggedIn={this.state.isLoggedIn}\n                    changeRegistrationStatus={this.changeRegistrationStatus}\n                />\n\n                <Switch>\n                    <Route path=\"/simple-blog/log-out-modal\" exact>\n                        <LogOutModal\n                            changeAllUsersStatusToOffline={\n                                this.changeAllUsersStatusToOffline\n                            }\n                            changeLoginStatus={this.changeLoginStatus}\n                        />\n                    </Route>\n                    <Route path=\"/simple-blog/verify\">\n                        <LogIn\n                            users={this.state.users}\n                            changeLoggedUserStatusToOnline={\n                                this.changeLoggedUserStatusToOnline\n                            }\n                            handleUserInfo={this.handleUserInfo}\n                        />\n                    </Route>\n                    <Route path=\"/simple-blog/create\">\n                        {isLoggedIn ? (\n                            <Create\n                                handleAddPost={this.handleAddPost}\n                                users={users}\n                            />\n                        ) : (\n                            <Redirect to=\"/simple-blog/verify\" />\n                        )}\n                    </Route>\n                    <Route path=\"/simple-blog\" exact>\n                        {!!posts.length ? (\n                            <PostCard posts={posts} />\n                        ) : (\n                            <Registration isLoggedIn={isLoggedIn} />\n                        )}\n                    </Route>\n                    {/* EDIT PART */}\n                    <Route path=\"/simple-blog/post/edit:id\" exact>\n                        <Edit\n                            users={users}\n                            posts={posts}\n                            handleNewPostValue={this.handleNewPostValue}\n                            handlePostsFilter={this.handlePostsFilter}\n                        />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}