{"version":3,"sources":["components/Registration/Registration.js","components/Navigation/Navigation.js","components/LogIn/LogIn.js","components/Create/Create.js","components/Posts/Card.js","components/Edit/Edit.js","components/Navigation/LogOutModal.js","App.js","index.js"],"names":["Registration","state","className","onClick","props","history","push","React","Component","withRouter","Navigation","clearLocalStotage","localStorage","clear","window","location","reload","console","log","this","isLoggedIn","to","type","LogIn","showValidationError","element","message","setState","prevState","errors","clearValidationError","newArray","err","handleChange","e","target","id","username","value","password","submitRegistration","registeredUser","users","find","user","isOnline","give","createNewUser","changeLoggedUserStatusToOnline","handleUserInfo","usernameErr","passwordErr","placeholder","onChange","Create","handleGreetingStatusChange","isShowingGreeting","handleTitleValueChange","titleValue","handlePostValueChange","postValue","callback","handleAddPost","length","time","givePostToApp","postId","Date","toLocaleTimeString","classes","root","noValidate","autoComplete","TextField","title","label","variant","Button","color","withStyles","theme","width","margin","spacing","useStyles","makeStyles","marginTop","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","posts","map","post","index","Card","key","CardHeader","Avatar","aria-label","subheader","edited","CardContent","Typography","component","CardActions","disableSpacing","IconButton","Edit","editPostValue","isPostValueChanging","onPostValueChange","newPostValue","handleDoneIconClick","handleNewPostValue","handleDeleteIconClick","handlePostsFilter","newPost","match","params","mainCard","style","green","defaultValue","red","rand","Math","round","random","getModalStyle","top","left","paper","position","palette","background","border","boxShadow","shadows","padding","useState","modalStyle","open","setOpen","handleClose","Modal","aria-labelledby","aria-describedby","onClose","changeAllUsersStatusToOffline","changeLoginStatus","App","newPosts","setItem","JSON","stringify","isSomebodyLoggedIn","some","filter","getItem","parse","changeRegistrationStatus","path","exact","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4593768e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Registration.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Registration extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"registartion\">\r\n                <div className=\"registartion-box\">\r\n                    <span\r\n                        className=\"log-in-btn\"\r\n                        onClick={() =>\r\n                            this.props.history.push(\"/simple-blog/verify\")\r\n                        }\r\n                    >\r\n                        Log in{\" \"}\r\n                    </span>\r\n                    and tell us your story!!!\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Registration);\r\n","import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navigation extends React.Component {\r\n    clearLocalStotage = () => {\r\n        localStorage.clear();\r\n        window.location.reload();\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props.isLoggedIn);\r\n        return (\r\n            <div className=\"navigation-container\">\r\n                <div className=\"navigation\">\r\n                    <div className=\"left-nav\">\r\n                        <div>\r\n                            <Link to=\"/simple-blog\">\r\n                                <span className=\"icon\">\r\n                                    <i className=\"fas fa-blog\" />\r\n                                    Blog\r\n                                </span>\r\n                            </Link>\r\n                        </div>\r\n                        <Link to=\"/simple-blog/create\">\r\n                            <div className=\"create-post-btn\">create post</div>\r\n                        </Link>\r\n                    </div>\r\n                    <div onClick={this.clearLocalStotage}> Clear Memory </div>\r\n                    {this.props.isLoggedIn ? (\r\n                        <div\r\n                            className=\"right-nav\"\r\n                            onClick={() =>\r\n                                this.props.history.push(\r\n                                    \"/simple-blog/log-out-modal\"\r\n                                )\r\n                            }\r\n                        >\r\n                            <div type=\"button\">Log out</div>\r\n                        </div>\r\n                    ) : (\r\n                        <div\r\n                            className=\"right-nav\"\r\n                            onClick={() =>\r\n                                this.props.history.push(\"/simple-blog/verify\")\r\n                            }\r\n                        >\r\n                            <div type=\"button\">Log in</div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React from \"react\";\r\nimport \"./LogIn.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass LogIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            isOnline: false,\r\n            errors: [],\r\n            isLoggedIn: false\r\n        };\r\n    }\r\n\r\n    showValidationError = (element, message) => {\r\n        this.setState(prevState => ({\r\n            errors: [...prevState.errors, { element, message }]\r\n        }));\r\n    };\r\n\r\n    clearValidationError = element => {\r\n        this.setState(prevState => {\r\n            let newArray = [];\r\n            for (let err of prevState.errors) {\r\n                if (element !== err.element) {\r\n                    newArray.push(err);\r\n                }\r\n            }\r\n            return { errors: newArray };\r\n        });\r\n    };\r\n\r\n    handleChange = e => {\r\n        if (e.target.id === \"username\") {\r\n            this.setState({ username: e.target.value });\r\n            this.clearValidationError(\"username\");\r\n        } else if (e.target.id === \"password\") {\r\n            this.setState({ password: e.target.value });\r\n            this.clearValidationError(\"password\");\r\n        }\r\n    };\r\n\r\n    submitRegistration = () => {\r\n        const { username, password } = this.state;\r\n        if (username === \"\") {\r\n            this.showValidationError(\"username\", \"Username can't be empty\");\r\n        }\r\n        if (password === \"\") {\r\n            this.showValidationError(\"password\", \"Password can't be empty\");\r\n        }\r\n\r\n        let registeredUser = this.props.users.find(\r\n            user => user.username === username && user.password === password\r\n        );\r\n\r\n        if (registeredUser) {\r\n            this.setState(\r\n                {\r\n                    isLoggedIn: true,\r\n                    isOnline: true\r\n                },\r\n                () => this.give(registeredUser)\r\n            );\r\n        } else if (username && password) {\r\n            this.setState({ isLoggedIn: true, isOnline: true }, () =>\r\n                this.createNewUser()\r\n            );\r\n        }\r\n    };\r\n\r\n    give = registeredUser => {\r\n        this.props.changeLoggedUserStatusToOnline(registeredUser);\r\n        this.props.history.push(\"/simple-blog/create\");\r\n    };\r\n\r\n    createNewUser = () => {\r\n        this.props.history.push(\"/simple-blog/create\");\r\n        this.props.handleUserInfo(\r\n            this.state.username,\r\n            this.state.password,\r\n            this.state.isOnline\r\n        );\r\n    };\r\n\r\n    render() {\r\n        let usernameErr = null;\r\n        let passwordErr = null;\r\n\r\n        for (let err of this.state.errors) {\r\n            if (err.element === \"username\") {\r\n                usernameErr = err.message;\r\n            }\r\n            if (err.element === \"password\") {\r\n                passwordErr = err.message;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"login-container\">\r\n                <div className=\"login-title-container\">\r\n                    <h2 className=\"login-title\">Log in</h2>\r\n                </div>\r\n                <div className=\"login\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name *\"\r\n                        id=\"username\"\r\n                        className=\"login-input\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <sub className=\"error\">\r\n                        {\" \"}\r\n                        {usernameErr ? usernameErr : \"\"}{\" \"}\r\n                    </sub>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password *\"\r\n                        id=\"password\"\r\n                        className=\"login-input\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <sub className=\"error\">\r\n                        {\" \"}\r\n                        {passwordErr ? passwordErr : \"\"}{\" \"}\r\n                    </sub>\r\n                    <button\r\n                        className=\"login-btn\"\r\n                        onClick={this.submitRegistration}\r\n                    >\r\n                        log in\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LogIn);\r\n","import React from \"react\";\r\nimport \"./Main.css\";\r\n// import Comment from '../Comment/Comment'\r\nimport { withRouter } from \"react-router-dom\";\r\n// Material ui\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"80%\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: \"100%\"\r\n        }\r\n    }\r\n});\r\n\r\nclass Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowingGreeting: true,\r\n            titleValue: \"\",\r\n            postValue: \"\",\r\n            postId: 0\r\n        };\r\n    }\r\n\r\n    handleGreetingStatusChange = () => {\r\n        this.setState({ isShowingGreeting: false });\r\n    };\r\n\r\n    // ONCHANGE\r\n    handleTitleValueChange = e => {\r\n        this.setState({\r\n            titleValue: e.target.value\r\n        });\r\n    };\r\n\r\n    handlePostValueChange = e => {\r\n        this.setState({\r\n            postValue: e.target.value\r\n        });\r\n    };\r\n    // ONCHANGE END\r\n\r\n    callback = () => {\r\n        this.props.history.push(\"/simple-blog/\");\r\n        this.props.handleAddPost({\r\n            titleValue: this.state.titleValue,\r\n            postValue: this.state.postValue,\r\n            username: this.props.users[this.props.users.length - 1].username,\r\n            time: this.time()\r\n        });\r\n    };\r\n\r\n    givePostToApp = () => {\r\n        this.setState(\r\n            state => ({ postId: state.postId + 1 }),\r\n            () => this.callback()\r\n        );\r\n    };\r\n    time = () => {\r\n        let date = new Date();\r\n        return date.toLocaleTimeString();\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className=\"input-global-container\">\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        className={classes.title}\r\n                        id=\"standard-basic\"\r\n                        label=\"Write a title\"\r\n                        onChange={this.handleTitleValueChange}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"Write a post\"\r\n                        variant=\"outlined\"\r\n                        onChange={this.handlePostValueChange}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.givePostToApp}\r\n                    >\r\n                        <span>\r\n                            <i className=\"fas fa-check fa-2x\"></i>\r\n                        </span>\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// export default withRouter(Create)\r\nexport default withStyles(styles)(withRouter(Create));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./Card.css\";\r\n// components\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: \"80%\",\r\n        margin: \"auto\",\r\n        marginTop: \"5px\"\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        margin: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest\r\n        })\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\"\r\n    },\r\n    avatar: {\r\n        backgroundColor: \"lightskyblue\"\r\n    }\r\n}));\r\n\r\nfunction PostCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return props.posts.map((post, index) => {\r\n        return (\r\n            <Card className={classes.root} key={index}>\r\n                <div className=\"card-container\">\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"recipe\"\r\n                                className={classes.avatar}\r\n                            >\r\n                                {post.username}\r\n                            </Avatar>\r\n                        }\r\n                        title={`${post.titleValue} writed by ${post.username} `}\r\n                        subheader={\r\n                            post.edited\r\n                                ? `${post.time} edited at ${post.edited}`\r\n                                : post.time\r\n                        }\r\n                    />\r\n                    <CardContent>\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                        >\r\n                            {post.postValue}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton\r\n                            aria-label=\"share\"\r\n                            color=\"primary\"\r\n                            onClick={() =>\r\n                                props.history.push(\r\n                                    `/simple-blog/post/edit:${post.postId}`\r\n                                )\r\n                            }\r\n                        >\r\n                            Edit\r\n                        </IconButton>\r\n                    </CardActions>\r\n                </div>\r\n            </Card>\r\n        );\r\n    });\r\n}\r\n\r\nexport default withRouter(PostCard);\r\n","import React from \"react\";\r\n// Router-dom\r\nimport { withRouter } from \"react-router-dom\";\r\n// Material-ui\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport DoneOutlineIcon from \"@material-ui/icons/DoneOutline\";\r\nimport { green, red } from \"@material-ui/core/colors\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// CSS\r\nimport \"./Edit.css\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"80%\",\r\n        margin: \"auto\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: \"100%\"\r\n        }\r\n    },\r\n    mainCard: {\r\n        width: \"80%\",\r\n        margin: \"auto\"\r\n    }\r\n});\r\n\r\nclass Edit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post: {},\r\n            isPostValueChanging: false,\r\n            newPostValue: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let newPost = this.props.posts.find(\r\n            post => `:${post.postId}` === this.props.match.params.id\r\n        );\r\n        this.setState({\r\n            post: newPost\r\n        });\r\n    }\r\n    //  CHANGES IS-POST VALUE CHANGING\r\n    editPostValue = () => {\r\n        this.setState({\r\n            isPostValueChanging: true\r\n        });\r\n    };\r\n\r\n    // On Post Value change\r\n    onPostValueChange = e => {\r\n        this.setState({ newPostValue: e.target.value });\r\n    };\r\n    // ON done icon click\r\n    handleDoneIconClick = () => {\r\n        const { post, newPostValue } = this.state;\r\n        this.props.history.push(\"/simple-blog/\");\r\n        this.props.handleNewPostValue(post.postId, newPostValue);\r\n    };\r\n    // ON delete icon click\r\n    handleDeleteIconClick = () => {\r\n        const { post } = this.state;\r\n        this.props.history.push(\"/simple-blog/\");\r\n        this.props.handlePostsFilter(post.postId);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { post, isPostValueChanging, newPostValue } = this.state;\r\n        console.log(\"POSTS --\", this.props.posts);\r\n        console.log(\"POST --\", post);\r\n        console.log(\"CHANGED VALUE --\", newPostValue);\r\n        return (\r\n            <Card className={classes.root}>\r\n                <div className={classes.mainCard}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"recipe\"\r\n                                style={{ backgroundColor: green[300] }}\r\n                            >\r\n                                {post.username}\r\n                            </Avatar>\r\n                        }\r\n                        title={`${post.titleValue} writed by ${post.username} `}\r\n                        subheader={post.time}\r\n                    />\r\n                    <CardContent>\r\n                        {isPostValueChanging ? (\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Write a post\"\r\n                                variant=\"outlined\"\r\n                                defaultValue={post.postValue}\r\n                                onChange={this.onPostValueChange}\r\n                            />\r\n                        ) : (\r\n                            <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textSecondary\"\r\n                                component=\"p\"\r\n                            >\r\n                                {post.postValue}\r\n                            </Typography>\r\n                        )}\r\n                    </CardContent>\r\n                    <div className=\"edit-btn-container\">\r\n                        <CardActions disableSpacing>\r\n                            <IconButton\r\n                                aria-label=\"share\"\r\n                                onClick={this.editPostValue}\r\n                            >\r\n                                <EditIcon style={{ color: green[500] }} />\r\n                            </IconButton>\r\n                        </CardActions>\r\n                        <CardActions disableSpacing>\r\n                            <IconButton\r\n                                aria-label=\"share\"\r\n                                onClick={this.handleDeleteIconClick}\r\n                            >\r\n                                <DeleteForeverIcon\r\n                                    style={{ color: red[500] }}\r\n                                />\r\n                            </IconButton>\r\n                        </CardActions>\r\n                        <CardActions disableSpacing>\r\n                            <IconButton\r\n                                aria-label=\"share\"\r\n                                onClick={this.handleDoneIconClick}\r\n                            >\r\n                                <DoneOutlineIcon color=\"primary\" />\r\n                            </IconButton>\r\n                        </CardActions>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(Edit));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        position: \"absolute\",\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"2px solid #000\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    }\r\n}));\r\n\r\nfunction LogOutModal(props) {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        props.changeAllUsersStatusToOffline();\r\n        handleClose();\r\n        props.changeLoginStatus();\r\n        props.history.push(\"/simple-blog/verify\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <h2 id=\"simple-modal-title\">Log Out</h2>\r\n                    <p id=\"simple-modal-description\">Are you sure ?</p>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        Log out\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(LogOutModal);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Registration from \"./components/Registration/Registration\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport LogIn from \"./components/LogIn/LogIn\";\nimport Create from \"./components/Create/Create\";\nimport PostCard from \"./components/Posts/Card\";\nimport Edit from \"./components/Edit/Edit\";\n\nimport LogOutModal from \"./components/Navigation/LogOutModal\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isLoggedIn: localStorage.getItem(\"isLoggedIn\") || false,\n            posts: JSON.parse(localStorage.getItem(\"posts\") || \"[]\"),\n            users: JSON.parse(localStorage.getItem(\"users\") || \"[]\"),\n            postId: localStorage.getItem(\"postId\") || 0\n        };\n    }\n    // Time\n    time = () => {\n        let date = new Date();\n        return date.toLocaleTimeString();\n    };\n\n    handleAddPost = post => {\n        let postWithId = { ...post, postId: this.state.postId + 1 };\n        const newPosts = [postWithId, ...this.state.posts];\n        this.setState({\n            posts: newPosts,\n            postId: this.state.postId + 1\n        });\n        localStorage.setItem(\"postId\", this.state.postId);\n        localStorage.setItem(\"posts\", JSON.stringify(newPosts));\n    };\n\n    changeLoginStatus = () => {\n        const isSomebodyLoggedIn = this.state.users.some(\n            user => user.isOnline === true\n        );\n\n        console.log(\"wefewf\", isSomebodyLoggedIn);\n        this.setState(\n            {\n                isLoggedIn: !isSomebodyLoggedIn\n            },\n            () => localStorage.setItem(\"isLoggedIn\", isSomebodyLoggedIn)\n        );\n    };\n\n    changeAllUsersStatusToOffline = () => {\n        this.setState({\n            users: this.state.users.map(user => ({ ...user, isOnline: false }))\n        });\n        localStorage.setItem(\"isLoggedIn\", this.state.isLoggedIn);\n    };\n\n    changeLoggedUserStatusToOnline = registeredUser => {\n        this.setState({\n            users: this.state.users.map(user => {\n                if (user.username === registeredUser.username) {\n                    return { ...user, isOnline: true };\n                }\n                return user;\n            })\n        });\n        localStorage.setItem(\"isLoggedIn\", this.state.isLoggedIn);\n    };\n\n    handleUserInfo = (username, password, isOnline) => {\n        this.setState(\n            state => ({\n                isLoggedIn: true,\n                users: [\n                    ...state.users,\n                    {\n                        username: username,\n                        password: password,\n                        isOnline: isOnline\n                    }\n                ]\n            }),\n            () =>\n                localStorage.setItem(\"users\", JSON.stringify(this.state.users)),\n            () => this.changeLoginStatus()\n        );\n    };\n\n    // Handle function that adds new value to post with that id\n    handleNewPostValue = (id, newPostValue) => {\n        const newPosts = this.state.posts.map(post => {\n            if (post.postId === id) {\n                console.log(\"yes\");\n                return {\n                    ...post,\n                    postValue: newPostValue,\n                    edited: this.time()\n                };\n            } else {\n                return post;\n            }\n        });\n        localStorage.setItem(\"posts\", JSON.stringify(newPosts));\n        this.setState({\n            posts: newPosts\n        });\n    };\n\n    // Handle function that filteres posts and takes all posts accept deleted\n    handlePostsFilter = id => {\n        this.setState(\n            state => ({\n                posts: state.posts.filter(post => post.postId !== id)\n            }),\n            () =>\n                localStorage.setItem(\"posts\", JSON.stringify(this.state.posts))\n        );\n    };\n\n    render() {\n        const { isLoggedIn, posts, users } = this.state;\n        console.log(\"POSTS---\", posts);\n        console.log(\"LOCALSTORAGE---\", localStorage);\n        console.log(\"USERS --\", users);\n        console.log(\"IsLoggedIn --\", this.state.isLoggedIn);\n        return (\n            <div className=\"app\">\n                <Navigation\n                    isLoggedIn={this.state.isLoggedIn}\n                    changeRegistrationStatus={this.changeRegistrationStatus}\n                />\n\n                <Switch>\n                    <Route path=\"/simple-blog/log-out-modal\" exact>\n                        <LogOutModal\n                            changeAllUsersStatusToOffline={\n                                this.changeAllUsersStatusToOffline\n                            }\n                            changeLoginStatus={this.changeLoginStatus}\n                        />\n                    </Route>\n                    <Route path=\"/simple-blog/verify\">\n                        <LogIn\n                            users={this.state.users}\n                            changeLoggedUserStatusToOnline={\n                                this.changeLoggedUserStatusToOnline\n                            }\n                            handleUserInfo={this.handleUserInfo}\n                        />\n                    </Route>\n                    <Route path=\"/simple-blog/create\">\n                        {isLoggedIn ? (\n                            <Create\n                                handleAddPost={this.handleAddPost}\n                                users={users}\n                            />\n                        ) : (\n                            <Redirect to=\"/simple-blog/verify\" />\n                        )}\n                    </Route>\n                    <Route path=\"/simple-blog\" exact>\n                        {posts[0] !== undefined ? (\n                            <PostCard posts={posts} />\n                        ) : (\n                            <Registration />\n                        )}\n                    </Route>\n                    {/* EDIT PART */}\n                    <Route path=\"/simple-blog/post/edit:id\" exact>\n                        <Edit\n                            posts={posts}\n                            handleNewPostValue={this.handleNewPostValue}\n                            handlePostsFilter={this.handlePostsFilter}\n                        />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}