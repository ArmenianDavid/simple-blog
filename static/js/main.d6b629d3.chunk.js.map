{"version":3,"sources":["components/Registration/Registration.js","components/Navigation/Navigation.js","components/LogIn/LogIn.js","components/Create/Create.js","components/Posts/Posts.js","components/Comment/Comment.js","components/Comment/CommentCreator.js","components/Edit/Edit.js","components/Navigation/LogOutModal.js","App.js","index.js"],"names":["Registration","this","props","isLoggedIn","className","onClick","history","push","React","Component","withRouter","Navigation","to","type","LogIn","showValidationError","element","message","setState","prevState","errors","clearValidationError","newArray","err","handleChange","e","target","id","username","value","password","submitRegistration","state","registeredUser","users","find","user","isOnline","give","createNewUser","changeLoggedUserStatusToOnline","handleUserInfo","usernameErr","passwordErr","placeholder","onChange","Create","handleGreetingStatusChange","isShowingGreeting","handleTitleValueChange","titleValue","handlePostValueChange","postValue","callback","handleAddPost","time","comments","givePostToApp","postId","Date","toLocaleTimeString","classes","root","noValidate","autoComplete","TextField","title","label","variant","Button","color","withStyles","theme","width","margin","spacing","useStyles","makeStyles","marginTop","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","posts","map","post","index","Card","key","CardHeader","Avatar","aria-label","toUpperCase","subheader","edited","CardContent","Typography","component","CardActions","disableSpacing","IconButton","disabled","Comment","changeEditStatus","isCommentEditing","changeCommentValue","item","commentValue","handleCommentOnChange","mainCard","style","green","commentTime","defaultValue","red","display","justifyContent","CommentCreator","addComment","comment","loginedUser","uniqueId","addCommentToPostst","console","log","handleAddCommentToPost","chagedComments","handleOnchange","Math","random","toString","substr","marginLeft","button","Edit","editPostValue","isPostValueChanging","newPostValue","handleNewPostValue","onPostValueChange","handleDoneIconClick","handleDeleteIconClick","handlePostsFilter","match","params","buttonDisabled","rand","round","getModalStyle","top","left","paper","position","palette","background","border","boxShadow","shadows","padding","useState","modalStyle","open","setOpen","handleClose","Modal","aria-labelledby","aria-describedby","onClose","changeAllUsersStatusToOffline","App","newPosts","localStorage","setItem","JSON","stringify","changeLoginStatus","isSomebodyLoggedIn","some","filter","parse","getItem","changeRegistrationStatus","path","exact","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6b629d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Registration.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Registration extends React.Component {\r\n    render() {\r\n        if (this.props.isLoggedIn) {\r\n            return (\r\n                <div className=\"registartion\">\r\n                    <div className=\"registartion-box\">\r\n                        <span\r\n                            className=\"log-in-btn\"\r\n                            onClick={() =>\r\n                                this.props.history.push(\"/simple-blog/create\")\r\n                            }\r\n                        >\r\n                            Create post{\" \"}\r\n                        </span>\r\n                        and tell us your story!!!\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"registartion\">\r\n                <div className=\"registartion-box\">\r\n                    <span\r\n                        className=\"log-in-btn\"\r\n                        onClick={() =>\r\n                            this.props.history.push(\"/simple-blog/verify\")\r\n                        }\r\n                    >\r\n                        Log in{\" \"}\r\n                    </span>\r\n                    and tell us your story!!!\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Registration);\r\n","import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navigation-container\">\r\n                <div className=\"navigation\">\r\n                    <div className=\"left-nav\">\r\n                        <div>\r\n                            <Link to=\"/simple-blog\">\r\n                                <span className=\"icon\">\r\n                                    <i className=\"fas fa-blog\" />\r\n                                    Blog\r\n                                </span>\r\n                            </Link>\r\n                        </div>\r\n                        <Link to=\"/simple-blog/create\">\r\n                            <div className=\"create-post-btn\">create post</div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    {this.props.isLoggedIn === true ||\r\n                    this.props.isLoggedIn === \"true\" ? (\r\n                        <div\r\n                            className=\"right-nav\"\r\n                            onClick={() =>\r\n                                this.props.history.push(\r\n                                    \"/simple-blog/log-out-modal\"\r\n                                )\r\n                            }\r\n                        >\r\n                            <div type=\"button\">Log out</div>\r\n                        </div>\r\n                    ) : (\r\n                        <div\r\n                            className=\"right-nav\"\r\n                            onClick={() =>\r\n                                this.props.history.push(\"/simple-blog/verify\")\r\n                            }\r\n                        >\r\n                            <div type=\"button\">Log in</div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React from \"react\";\r\nimport \"./LogIn.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass LogIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            isOnline: false,\r\n            errors: [],\r\n            isLoggedIn: false\r\n        };\r\n    }\r\n\r\n    showValidationError = (element, message) => {\r\n        this.setState(prevState => ({\r\n            errors: [...prevState.errors, { element, message }]\r\n        }));\r\n    };\r\n\r\n    clearValidationError = element => {\r\n        this.setState(prevState => {\r\n            let newArray = [];\r\n            for (let err of prevState.errors) {\r\n                if (element !== err.element) {\r\n                    newArray.push(err);\r\n                }\r\n            }\r\n            return { errors: newArray };\r\n        });\r\n    };\r\n\r\n    handleChange = e => {\r\n        if (e.target.id === \"username\") {\r\n            this.setState({ username: e.target.value });\r\n            this.clearValidationError(\"username\");\r\n        } else if (e.target.id === \"password\") {\r\n            this.setState({ password: e.target.value });\r\n            this.clearValidationError(\"password\");\r\n        }\r\n    };\r\n\r\n    submitRegistration = () => {\r\n        const { username, password } = this.state;\r\n        if (username === \"\") {\r\n            this.showValidationError(\"username\", \"Username can't be empty\");\r\n        }\r\n        if (password === \"\") {\r\n            this.showValidationError(\"password\", \"Password can't be empty\");\r\n        }\r\n\r\n        let registeredUser = this.props.users.find(\r\n            user => user.username === username && user.password === password\r\n        );\r\n\r\n        if (registeredUser) {\r\n            this.setState(\r\n                {\r\n                    isLoggedIn: true,\r\n                    isOnline: true\r\n                },\r\n                () => this.give(registeredUser)\r\n            );\r\n        } else if (username && password) {\r\n            this.setState({ isLoggedIn: true, isOnline: true }, () =>\r\n                this.createNewUser()\r\n            );\r\n        }\r\n    };\r\n\r\n    give = registeredUser => {\r\n        this.props.changeLoggedUserStatusToOnline(registeredUser);\r\n        this.props.history.push(\"/simple-blog\");\r\n    };\r\n\r\n    createNewUser = () => {\r\n        this.props.history.push(\"/simple-blog\");\r\n        this.props.handleUserInfo(\r\n            this.state.username,\r\n            this.state.password,\r\n            this.state.isOnline\r\n        );\r\n    };\r\n\r\n    render() {\r\n        let usernameErr = null;\r\n        let passwordErr = null;\r\n\r\n        for (let err of this.state.errors) {\r\n            if (err.element === \"username\") {\r\n                usernameErr = err.message;\r\n            }\r\n            if (err.element === \"password\") {\r\n                passwordErr = err.message;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"login-container\">\r\n                <div className=\"login-title-container\">\r\n                    <h2 className=\"login-title\">Log in</h2>\r\n                </div>\r\n                <div className=\"login\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name *\"\r\n                        id=\"username\"\r\n                        className=\"login-input\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <sub className=\"error\">\r\n                        {\" \"}\r\n                        {usernameErr ? usernameErr : \"\"}{\" \"}\r\n                    </sub>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password *\"\r\n                        id=\"password\"\r\n                        className=\"login-input\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <sub className=\"error\">\r\n                        {\" \"}\r\n                        {passwordErr ? passwordErr : \"\"}{\" \"}\r\n                    </sub>\r\n                    <button\r\n                        className=\"login-btn\"\r\n                        onClick={this.submitRegistration}\r\n                    >\r\n                        log in\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LogIn);\r\n","import React from \"react\";\r\nimport \"./Main.css\";\r\n// import Comment from '../Comment/Comment'\r\nimport { withRouter } from \"react-router-dom\";\r\n// Material ui\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"80%\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: \"100%\"\r\n        }\r\n    }\r\n});\r\n\r\nclass Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowingGreeting: true,\r\n            titleValue: \"\",\r\n            postValue: \"\",\r\n            postId: 0\r\n        };\r\n    }\r\n\r\n    handleGreetingStatusChange = () => {\r\n        this.setState({ isShowingGreeting: false });\r\n    };\r\n\r\n    // ONCHANGE\r\n    handleTitleValueChange = e => {\r\n        this.setState({\r\n            titleValue: e.target.value\r\n        });\r\n    };\r\n\r\n    handlePostValueChange = e => {\r\n        this.setState({\r\n            postValue: e.target.value\r\n        });\r\n    };\r\n    // ONCHANGE END\r\n\r\n    callback = () => {\r\n        this.props.history.push(\"/simple-blog/\");\r\n        this.props.handleAddPost({\r\n            titleValue: this.state.titleValue,\r\n            postValue: this.state.postValue,\r\n            username: this.props.users.find(user => user.isOnline === true)\r\n                .username,\r\n            time: this.time(),\r\n            comments: []\r\n        });\r\n    };\r\n\r\n    givePostToApp = () => {\r\n        this.setState(\r\n            state => ({ postId: state.postId + 1 }),\r\n            () => this.callback()\r\n        );\r\n    };\r\n    time = () => {\r\n        let date = new Date();\r\n        return date.toLocaleTimeString();\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className=\"input-global-container\">\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        className={classes.title}\r\n                        id=\"standard-basic\"\r\n                        label=\"Write a title\"\r\n                        onChange={this.handleTitleValueChange}\r\n                    />\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"Write a post\"\r\n                        variant=\"outlined\"\r\n                        onChange={this.handlePostValueChange}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.givePostToApp}\r\n                    >\r\n                        <span>\r\n                            <i className=\"fas fa-check fa-2x\"></i>\r\n                        </span>\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// export default withRouter(Create)\r\nexport default withStyles(styles)(withRouter(Create));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./Posts.css\";\r\n// components\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: \"80%\",\r\n        margin: \"auto\",\r\n        marginTop: \"5px\"\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        margin: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest\r\n        })\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\"\r\n    },\r\n    avatar: {\r\n        backgroundColor: \"lightskyblue\"\r\n    }\r\n}));\r\n\r\nfunction Posts(props) {\r\n    const classes = useStyles();\r\n\r\n    return props.posts.map((post, index) => {\r\n        return (\r\n            <Card className={classes.root} key={index}>\r\n                <div className=\"card-container\">\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"recipe\"\r\n                                className={classes.avatar}\r\n                            >\r\n                                {post.username[0].toUpperCase()}\r\n                            </Avatar>\r\n                        }\r\n                        title={`${post.titleValue} written by ${post.username} `}\r\n                        subheader={\r\n                            post.edited\r\n                                ? `${post.time} edited at ${post.edited}`\r\n                                : post.time\r\n                        }\r\n                    />\r\n                    <CardContent>\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                        >\r\n                            {post.postValue}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton\r\n                            aria-label=\"share\"\r\n                            color=\"primary\"\r\n                            disabled={props.isLoggedIn === false}\r\n                            onClick={() =>\r\n                                props.history.push(\r\n                                    `/simple-blog/post/edit:${post.postId}`\r\n                                )\r\n                            }\r\n                        >\r\n                            Edit\r\n                        </IconButton>\r\n                    </CardActions>\r\n                </div>\r\n            </Card>\r\n        );\r\n    });\r\n}\r\n\r\nexport default withRouter(Posts);\r\n","import React from \"react\";\r\n// Router-dom\r\nimport { withRouter } from \"react-router-dom\";\r\n// Material-ui\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { green, red } from \"@material-ui/core/colors\";\r\nimport { withStyles, Button } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// CSS\r\nimport \"../Edit/Edit.css\";\r\n// Components\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"60%\",\r\n        margin: \"1rem auto\",\r\n        height: 150,\r\n        backgroundColor: \"#f2f2f2\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: \"100%\"\r\n        }\r\n    },\r\n    mainCard: {\r\n        width: \"80%\",\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n});\r\n\r\nclass Comment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isCommentEditing: false,\r\n            commentValue: \"\"\r\n        };\r\n    }\r\n\r\n    changeEditStatus = () => {\r\n        this.setState(\r\n            {\r\n                isCommentEditing: !this.state.isCommentEditing\r\n            },\r\n            this.props.changeCommentValue(\r\n                this.props.item.id,\r\n                this.state.commentValue\r\n            )\r\n        );\r\n    };\r\n\r\n    handleCommentOnChange = e => {\r\n        this.setState({\r\n            commentValue: e.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes, item } = this.props;\r\n        const { isCommentEditing, commentValue } = this.state;\r\n\r\n        return (\r\n            <Card className={classes.root}>\r\n                <div className={classes.mainCard}>\r\n                    <div>\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar\r\n                                    aria-label=\"recipe\"\r\n                                    style={{ backgroundColor: green[300] }}\r\n                                >\r\n                                    {item.username[0].toUpperCase()}\r\n                                </Avatar>\r\n                            }\r\n                            title={`${item.commentTime} written by ${item.username} `}\r\n                        />\r\n                        <CardContent>\r\n                            {isCommentEditing ? (\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Write a post\"\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={item.commentValue}\r\n                                    onChange={this.handleCommentOnChange}\r\n                                />\r\n                            ) : (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                >\r\n                                    {commentValue\r\n                                        ? commentValue\r\n                                        : item.commentValue}\r\n                                </Typography>\r\n                            )}\r\n                        </CardContent>\r\n                    </div>\r\n                    <div>\r\n                        <CardActions disableSpacing>\r\n                            <IconButton\r\n                                aria-label=\"share\"\r\n                                onClick={this.changeEditStatus}\r\n                                // disabled={this.state.buttonDisabled}\r\n                            >\r\n                                <EditIcon style={{ color: green[500] }} />\r\n                            </IconButton>\r\n                        </CardActions>\r\n                        <CardActions disableSpacing>\r\n                            <IconButton\r\n                                aria-label=\"share\"\r\n                                // onClick={this.handleDeleteIconClick}\r\n                            >\r\n                                <DeleteForeverIcon\r\n                                    style={{ color: red[500] }}\r\n                                />\r\n                            </IconButton>\r\n                        </CardActions>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(Comment));\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n// Router-dom\r\nimport { withRouter } from \"react-router-dom\";\r\n// Matrial ui\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"80%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        margin: \"1rem auto\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(3),\r\n            width: \"100%\"\r\n        }\r\n    },\r\n    button: {\r\n        width: \"auto\"\r\n    }\r\n});\r\n\r\nclass CommentCreator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: this.props.post.comments,\r\n            commentValue: \"\",\r\n            commentTime: this.time\r\n        };\r\n    }\r\n\r\n    // Add Comment to Comments array\r\n    addComment = () => {\r\n        let comment = {\r\n            commentValue: this.state.commentValue,\r\n            commentTime: this.state.commentTime(),\r\n            username: this.props.loginedUser[0].username,\r\n            password: this.props.loginedUser[0].password,\r\n            id: this.uniqueId()\r\n        };\r\n        this.setState(\r\n            {\r\n                comments: [...this.state.comments, comment]\r\n            },\r\n            () => this.addCommentToPostst(this.state.comments)\r\n        );\r\n    };\r\n\r\n    addCommentToPostst = comments => {\r\n        console.log(\" COMMENTS \", comments);\r\n        this.props.handleAddCommentToPost(this.props.post.postId, comments);\r\n    };\r\n\r\n    changeCommentValue = (id, commentValue) => {\r\n        const chagedComments = this.state.comments.map(item => {\r\n            if (item.id === id) {\r\n                return { ...item, commentValue: commentValue };\r\n            }\r\n            return item;\r\n        });\r\n\r\n        this.props.handleAddCommentToPost(\r\n            this.props.post.postId,\r\n            chagedComments\r\n        );\r\n    };\r\n\r\n    // Comment Value onchange\r\n    handleOnchange = e => {\r\n        this.setState({\r\n            commentValue: e.target.value\r\n        });\r\n    };\r\n\r\n    time = () => {\r\n        let date = new Date();\r\n        return date.toLocaleTimeString();\r\n    };\r\n\r\n    uniqueId = () => {\r\n        // Math.random should be unique because of its seeding algorithm.\r\n        // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n        // after the decimal.\r\n        return (\r\n            \"_\" +\r\n            Math.random()\r\n                .toString(36)\r\n                .substr(2, 9)\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { comments } = this.state;\r\n\r\n        return (\r\n            <section>\r\n                <h2 style={{ marginLeft: \"4rem\" }}>Comment</h2>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        className={classes.title}\r\n                        id=\"standard-basic\"\r\n                        label=\"Write a Comment\"\r\n                        onChange={this.handleOnchange}\r\n                    />\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.addComment}\r\n                    >\r\n                        Comment\r\n                    </Button>\r\n                </form>\r\n                {comments.map((item, index) => {\r\n                    return (\r\n                        <Comment\r\n                            post={this.props.post}\r\n                            item={item}\r\n                            key={item.id}\r\n                            loginedUser={this.props.loginedUser}\r\n                            changeCommentValue={this.changeCommentValue}\r\n                        />\r\n                    );\r\n                })}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(CommentCreator));\r\n","import React from \"react\";\r\n// Router-dom\r\nimport { withRouter } from \"react-router-dom\";\r\n// Material-ui\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport DoneOutlineIcon from \"@material-ui/icons/DoneOutline\";\r\nimport { green, red } from \"@material-ui/core/colors\";\r\nimport { withStyles, Button } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// CSS\r\nimport \"./Edit.css\";\r\n// Components\r\nimport CommentCreator from \"../Comment/CommentCreator\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"80%\",\r\n        margin: \"auto\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: \"100%\"\r\n        }\r\n    },\r\n    mainCard: {\r\n        width: \"80%\",\r\n        margin: \"auto\"\r\n    }\r\n});\r\n\r\nclass Edit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post: this.props.posts.find(\r\n                post => `:${post.postId}` === this.props.match.params.id\r\n            ),\r\n            isPostValueChanging: false,\r\n            newPostValue: \"\",\r\n            loginedUser: {},\r\n            buttonDisabled: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let loginedUser = this.props.users.find(user => user.isOnline === true);\r\n\r\n        const buttonDisabled =\r\n            loginedUser.username !== this.state.post.username &&\r\n            loginedUser.password !== this.state.post.password;\r\n\r\n        this.setState({\r\n            loginedUser: loginedUser,\r\n            buttonDisabled: buttonDisabled\r\n        });\r\n    }\r\n    //  CHANGES IS-POST VALUE CHANGING\r\n    editPostValue = () => {\r\n        this.setState({\r\n            isPostValueChanging: !this.state.isPostValueChanging\r\n        });\r\n        const { post, newPostValue } = this.state;\r\n        this.props.handleNewPostValue(\r\n            post.postId,\r\n            newPostValue ? newPostValue : post.postValue\r\n        );\r\n    };\r\n\r\n    // On Post Value change\r\n    onPostValueChange = e => {\r\n        this.setState({\r\n            newPostValue: e.target.value\r\n                ? e.target.value\r\n                : this.state.post.postValue\r\n        });\r\n    };\r\n    // ON done icon click\r\n    handleDoneIconClick = () => {\r\n        const { post, newPostValue } = this.state;\r\n        this.setState({\r\n            isPostValueChanging: false\r\n        });\r\n        this.props.handleNewPostValue(\r\n            post.postId,\r\n            newPostValue ? newPostValue : post.postValue\r\n        );\r\n    };\r\n    // ON delete icon click\r\n    handleDeleteIconClick = () => {\r\n        const { post } = this.state;\r\n        this.props.history.push(\"/simple-blog/\");\r\n        this.props.handlePostsFilter(post.postId);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { post, isPostValueChanging, newPostValue } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Card className={classes.root}>\r\n                    <div className={classes.mainCard}>\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar\r\n                                    aria-label=\"recipe\"\r\n                                    style={{ backgroundColor: green[300] }}\r\n                                >\r\n                                    {post.username[0].toUpperCase()}\r\n                                </Avatar>\r\n                            }\r\n                            title={`${post.titleValue} writed by ${post.username} `}\r\n                            subheader={post.time}\r\n                        />\r\n                        <CardContent>\r\n                            {isPostValueChanging ? (\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Write a post\"\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={\r\n                                        newPostValue\r\n                                            ? newPostValue\r\n                                            : post.postValue\r\n                                    }\r\n                                    onChange={this.onPostValueChange}\r\n                                />\r\n                            ) : (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                >\r\n                                    {newPostValue\r\n                                        ? newPostValue\r\n                                        : post.postValue}\r\n                                </Typography>\r\n                            )}\r\n                        </CardContent>\r\n                        <div className=\"edit-btn-container\">\r\n                            <CardActions disableSpacing>\r\n                                <IconButton\r\n                                    aria-label=\"share\"\r\n                                    onClick={this.editPostValue}\r\n                                    disabled={this.state.buttonDisabled}\r\n                                >\r\n                                    <EditIcon style={{ color: green[500] }} />\r\n                                </IconButton>\r\n                            </CardActions>\r\n                            <CardActions disableSpacing>\r\n                                <IconButton\r\n                                    aria-label=\"share\"\r\n                                    onClick={this.handleDeleteIconClick}\r\n                                    disabled={this.state.buttonDisabled}\r\n                                >\r\n                                    <DeleteForeverIcon\r\n                                        style={{ color: red[500] }}\r\n                                    />\r\n                                </IconButton>\r\n                            </CardActions>\r\n                            <CardActions disableSpacing>\r\n                                <IconButton\r\n                                    aria-label=\"share\"\r\n                                    onClick={this.handleDoneIconClick}\r\n                                >\r\n                                    <DoneOutlineIcon color=\"primary\" />\r\n                                </IconButton>\r\n                            </CardActions>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n                <CommentCreator\r\n                    post={post}\r\n                    loginedUser={this.props.loginedUser}\r\n                    handleAddCommentToPost={this.props.handleAddCommentToPost}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(Edit));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        position: \"absolute\",\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"2px solid #000\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    }\r\n}));\r\n\r\nfunction LogOutModal(props) {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        props.changeAllUsersStatusToOffline();\r\n        handleClose();\r\n        props.history.push(\"/simple-blog/verify\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <h2 id=\"simple-modal-title\">Log Out</h2>\r\n                    <p id=\"simple-modal-description\">Are you sure ?</p>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        Log out\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(LogOutModal);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Registration from \"./components/Registration/Registration\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport LogIn from \"./components/LogIn/LogIn\";\nimport Create from \"./components/Create/Create\";\nimport Posts from \"./components/Posts/Posts\";\nimport Edit from \"./components/Edit/Edit\";\n\nimport LogOutModal from \"./components/Navigation/LogOutModal\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isLoggedIn: JSON.parse(localStorage.getItem(\"isLoggedIn\")) || false,\n            posts: JSON.parse(localStorage.getItem(\"posts\") || \"[]\"),\n            users: JSON.parse(localStorage.getItem(\"users\") || \"[]\"),\n            postId: JSON.parse(localStorage.getItem(\"postId\")) || 0\n        };\n    }\n    // Time\n    time = () => {\n        let date = new Date();\n        return date.toLocaleTimeString();\n    };\n\n    handleAddPost = post => {\n        let postWithId = { ...post, postId: this.state.postId + 1 };\n        const newPosts = [postWithId, ...this.state.posts];\n        this.setState({\n            posts: newPosts,\n            postId: this.state.postId + 1\n        });\n        localStorage.setItem(\"postId\", JSON.stringify(this.state.postId + 1));\n        localStorage.setItem(\"posts\", JSON.stringify(newPosts));\n    };\n\n    changeLoginStatus = () => {\n        localStorage.setItem(\"users\", JSON.stringify(this.state.users));\n        const isSomebodyLoggedIn = this.state.users.some(\n            user => user.isOnline === true\n        );\n        this.setState({\n            isLoggedIn: isSomebodyLoggedIn\n        });\n        localStorage.setItem(\"isLoggedIn\", JSON.stringify(isSomebodyLoggedIn));\n    };\n\n    changeAllUsersStatusToOffline = () => {\n        this.setState(\n            {\n                users: this.state.users.map(user => ({\n                    ...user,\n                    isOnline: false\n                }))\n            },\n            () => this.changeLoginStatus()\n        );\n    };\n\n    changeLoggedUserStatusToOnline = registeredUser => {\n        this.setState({\n            users: this.state.users.map(user => {\n                if (user.username === registeredUser.username) {\n                    return { ...user, isOnline: true };\n                }\n                return user;\n            }),\n            isLoggedIn: true\n        });\n    };\n\n    handleUserInfo = (username, password, isOnline) => {\n        this.setState(\n            state => ({\n                isLoggedIn: true,\n                users: [\n                    ...state.users,\n                    {\n                        username: username,\n                        password: password,\n                        isOnline: isOnline\n                    }\n                ]\n            }),\n            () =>\n                localStorage.setItem(\n                    \"users\",\n                    JSON.stringify(this.state.users),\n                    this.changeLoginStatus()\n                ),\n            localStorage.setItem(\n                \"isLoggedIn\",\n                JSON.stringify(this.state.isLoggedIn)\n            )\n        );\n    };\n\n    // Handle function that adds new value to post with that id\n    handleNewPostValue = (id, newPostValue) => {\n        const newPosts = this.state.posts.map(post => {\n            if (post.postId === id) {\n                console.log(\"yes\");\n                return {\n                    ...post,\n                    postValue: newPostValue,\n                    edited: this.time()\n                };\n            } else {\n                return post;\n            }\n        });\n        localStorage.setItem(\"posts\", JSON.stringify(newPosts));\n        this.setState({\n            posts: newPosts\n        });\n    };\n\n    // Handle function that filteres posts and takes all posts accept deleted\n    handlePostsFilter = id => {\n        this.setState(\n            state => ({\n                posts: state.posts.filter(post => post.postId !== id)\n            }),\n            () =>\n                localStorage.setItem(\"posts\", JSON.stringify(this.state.posts))\n        );\n    };\n\n    // Add Comments to its post\n    handleAddCommentToPost = (postId, comments) => {\n        const { posts } = this.state;\n        let newPosts = posts.map(post => {\n            if (post.postId == postId) {\n                post.comments = comments;\n            }\n            return post;\n        });\n        this.setState({\n            posts: newPosts\n        });\n        localStorage.setItem(\"posts\", JSON.stringify(newPosts));\n    };\n\n    render() {\n        const { isLoggedIn, posts, users } = this.state;\n\n        let loginedUser = users.filter(user => user.isOnline === true);\n\n        return (\n            <div className=\"app\">\n                <Navigation\n                    isLoggedIn={isLoggedIn}\n                    changeRegistrationStatus={this.changeRegistrationStatus}\n                />\n\n                <Switch>\n                    <Route path=\"/simple-blog/log-out-modal\" exact>\n                        <LogOutModal\n                            changeAllUsersStatusToOffline={\n                                this.changeAllUsersStatusToOffline\n                            }\n                            changeLoginStatus={this.changeLoginStatus}\n                        />\n                    </Route>\n                    <Route path=\"/simple-blog/verify\">\n                        <LogIn\n                            users={this.state.users}\n                            changeLoggedUserStatusToOnline={\n                                this.changeLoggedUserStatusToOnline\n                            }\n                            handleUserInfo={this.handleUserInfo}\n                        />\n                    </Route>\n                    <Route path=\"/simple-blog/create\">\n                        {isLoggedIn ? (\n                            <Create\n                                handleAddPost={this.handleAddPost}\n                                users={users}\n                            />\n                        ) : (\n                            <Redirect to=\"/simple-blog/verify\" />\n                        )}\n                    </Route>\n                    <Route path=\"/simple-blog\" exact>\n                        {!!posts.length ? (\n                            <Posts posts={posts} isLoggedIn={isLoggedIn} />\n                        ) : (\n                            <Registration isLoggedIn={isLoggedIn} />\n                        )}\n                    </Route>\n                    {/* EDIT PART */}\n                    <Route path=\"/simple-blog/post/edit:id\" exact>\n                        <Edit\n                            users={users}\n                            posts={posts}\n                            handleNewPostValue={this.handleNewPostValue}\n                            handlePostsFilter={this.handlePostsFilter}\n                            loginedUser={loginedUser}\n                            handleAddCommentToPost={this.handleAddCommentToPost}\n                        />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}